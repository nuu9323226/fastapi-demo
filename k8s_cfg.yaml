apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-demo
  namespace: dev
  labels:
    app: fastapi-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fastapi-demo
  template:
    metadata:
      labels:
        app: fastapi-demo
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      volumes:
        - name: nfs-volume
          persistentVolumeClaim:
            claimName: fast-nfs
      containers:
        - name: fastapi
          image: nuu9323226/fastapi-demo:latest
          ports:
            - containerPort: 8000
          securityContext:
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /mnt/nfs
              name: nfs-volume
          resources:
            limits:
              cpu: "500m"
              memory: "256Mi"
            requests:
              cpu: "250m"
              memory: "128Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: fastapi-demo
  namespace: dev
  labels:
    app: fastapi-demo
spec:
  type: NodePort
  selector:
    app: fastapi-demo
  ports:
    - port: 80
      targetPort: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fastapi-demo
  namespace: dev
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /ai/fastapi-demo
            pathType: Prefix
            backend:
              service:
                name: fastapi-demo
                port:
                  number: 80
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fast-nfs
  namespace: dev
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: nfs-csi