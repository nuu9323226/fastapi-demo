# ----------------------------------------------------------------------
# Kubernetes 配置文件總結
# ----------------------------------------------------------------------
# 此文件包含一個完整的 FastAPI 應用部署設定，包括:
# 1. Deployment: 部署 FastAPI 容器 (映像檔 nuu9323226/fastapi-demo:0523)
#    - 使用 NFS 持久化存儲 (/app/nfs)
#    - 資源限制: CPU 500m, 記憶體 256Mi
# 2. Service: NodePort 類型，將容器端口 8000 暴露為服務端口 80
# 3. Ingress: 配置 URL 路徑 /ai/fastapi-demo/
#    - 使用 nginx ingress controller
#    - 路徑重寫 (rewrite-target): 
#      * 設定 nginx.ingress.kubernetes.io/rewrite-target: /$1,將 rewrite-target 從 / 改為 /$1，這樣可以保留路徑中的重要部分。
#      * 配合 path: /ai/fastapi-demo/(.*)，使用正則表達式捕獲括號內的內容 
#      * 例如：/ai/fastapi-demo/docs 會重寫為 /docs
#      * 如此保留路徑後段，使 FastAPI 的 Swagger UI (/docs) 能正確顯示
#      * pathType 必須設為 ImplementationSpecific 才能支援正則表達式
#      這樣修改後，當訪問 /ai/fastapi-demo/docs 時，請求會被正確地轉發到 FastAPI 服務的 /docs 路徑，從而顯示 Swagger UI。
# 4. PVC: 持久卷聲明，使用 nfs-csi 存儲類別申請 1Gi 空間
# ----------------------------------------------------------------------

apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-demo
  namespace: dev
  labels:
    app: fastapi-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fastapi-demo
  template:
    metadata:
      labels:
        app: fastapi-demo
    spec:
      # securityContext:
      #   fsGroup: 1000  # 設置卷的群組為 1000
      volumes:
        - name: nfs-volume
          persistentVolumeClaim:
            claimName: fast-nfs
      initContainers:
        - name: fix-permissions
          image: busybox
          command: ["sh", "-c", "chown -R 1000:1000 /app/nfs"]
          securityContext:
            runAsUser: 0  # 以 root 身份運行
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /app/nfs
              name: nfs-volume      
      containers:
        - name: fastapi
          image: nuu9323226/fastapi-demo:0527
          ports:
            - containerPort: 8000
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
          volumeMounts:
            - mountPath: /app/nfs
              name: nfs-volume
          resources:
            limits:
              cpu: "500m"
              memory: "256Mi"
            requests:
              cpu: "250m"
              memory: "128Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: fastapi-demo
  namespace: dev
  labels:
    app: fastapi-demo
spec:
  type: NodePort
  selector:
    app: fastapi-demo
  ports:
    - port: 80
      targetPort: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fastapi-demo
  namespace: dev
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/ssl-redirect: "false"

spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /ai/fastapi-demo/(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: fastapi-demo
                port:
                  number: 80

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fast-nfs
  namespace: dev
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: nfs-csi

